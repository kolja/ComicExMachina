["^ ","~:output",["^ ","~:js","goog.provide('ui.panel');\nui.panel.cell_neighbours = (function ui$panel$cell_neighbours(p__45506,p__45507){\nvar map__45508 = p__45506;\nvar map__45508__$1 = (((((!((map__45508 == null))))?(((((map__45508.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45508.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45508):map__45508);\nvar grid_width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45508__$1,new cljs.core.Keyword(null,\"grid-width\",\"grid-width\",837583106));\nvar grid_height = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45508__$1,new cljs.core.Keyword(null,\"grid-height\",\"grid-height\",-995153669));\nvar vec__45509 = p__45507;\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45509,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45509,(1),null);\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__45513){\nvar vec__45514 = p__45513;\nvar x__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45514,(0),null);\nvar y__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45514,(1),null);\nif(((((((0) <= x__$1)) && ((x__$1 <= grid_width)))) && (((((0) <= y__$1)) && ((y__$1 <= grid_height)))))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x__$1,y__$1], null);\n} else {\nreturn null;\n}\n}),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(x - (1)),y], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x,(y - (1))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(x + (1)),y], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x,(y + (1))], null)], null));\n});\nui.panel.upper_left_corner = (function ui$panel$upper_left_corner(cells){\nvar or__4126__auto__ = cljs.core.first(cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.second),cells));\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn cljs.core.PersistentVector.EMPTY;\n}\n});\nui.panel.rotate = (function ui$panel$rotate(p__45519,n){\nvar vec__45520 = p__45519;\nvar cx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45520,(0),null);\nvar cy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45520,(1),null);\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__45523){\nvar vec__45524 = p__45523;\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45524,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45524,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cx + x),(cy + y)], null);\n}),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(1)], null)], null)),cljs.core.mod(n,(4)));\n});\nui.panel.mod4 = (function ui$panel$mod4(var_args){\nvar G__45528 = arguments.length;\nswitch (G__45528) {\ncase 2:\nreturn ui.panel.mod4.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 1:\nreturn ui.panel.mod4.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(ui.panel.mod4.cljs$core$IFn$_invoke$arity$2 = (function (f,n){\nreturn cljs.core.mod((f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(n) : f.call(null,n)),(4));\n}));\n\n(ui.panel.mod4.cljs$core$IFn$_invoke$arity$1 = (function (n){\nreturn cljs.core.mod(n,(4));\n}));\n\n(ui.panel.mod4.cljs$lang$maxFixedArity = 2);\n\nui.panel.make_verts = (function ui$panel$make_verts(verts,cell,from,to){\nvar angle = ui.panel.mod4.cljs$core$IFn$_invoke$arity$1((from - to));\nvar normals = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(-1),(-1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(-1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(-1),(1)], null)], null);\nvar vec__45529 = ui.panel.rotate(cell,(from + (3)));\nvar cx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45529,(0),null);\nvar cy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45529,(1),null);\nvar vec__45532 = ui.panel.rotate(cell,from);\nvar c1x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45532,(0),null);\nvar c1y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45532,(1),null);\nvar vec__45535 = ui.panel.rotate(cell,(from + (2)));\nvar c3x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45535,(0),null);\nvar c3y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45535,(1),null);\nvar pred__45538 = cljs.core._EQ_;\nvar expr__45539 = angle;\nif(cljs.core.truth_((pred__45538.cljs$core$IFn$_invoke$arity$2 ? pred__45538.cljs$core$IFn$_invoke$arity$2((0),expr__45539) : pred__45538.call(null,(0),expr__45539)))){\nreturn verts;\n} else {\nif(cljs.core.truth_((pred__45538.cljs$core$IFn$_invoke$arity$2 ? pred__45538.cljs$core$IFn$_invoke$arity$2((1),expr__45539) : pred__45538.call(null,(1),expr__45539)))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(verts,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),c3x,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),c3y,new cljs.core.Keyword(null,\"normal\",\"normal\",-1519123858),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(normals,ui.panel.mod4.cljs$core$IFn$_invoke$arity$1((to + (3))))], null));\n} else {\nif(cljs.core.truth_((pred__45538.cljs$core$IFn$_invoke$arity$2 ? pred__45538.cljs$core$IFn$_invoke$arity$2((2),expr__45539) : pred__45538.call(null,(2),expr__45539)))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(verts,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),cx,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),cy,new cljs.core.Keyword(null,\"normal\",\"normal\",-1519123858),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(normals,ui.panel.mod4.cljs$core$IFn$_invoke$arity$2(cljs.core.inc,to))], null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),c1x,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),c1y,new cljs.core.Keyword(null,\"normal\",\"normal\",-1519123858),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(normals,ui.panel.mod4.cljs$core$IFn$_invoke$arity$1((to + (2))))], null)], 0));\n} else {\nif(cljs.core.truth_((pred__45538.cljs$core$IFn$_invoke$arity$2 ? pred__45538.cljs$core$IFn$_invoke$arity$2((3),expr__45539) : pred__45538.call(null,(3),expr__45539)))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(verts,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),cx,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),cy,new cljs.core.Keyword(null,\"normal\",\"normal\",-1519123858),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(normals,ui.panel.mod4.cljs$core$IFn$_invoke$arity$1((to + (2))))], null));\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__45539)].join('')));\n}\n}\n}\n}\n});\nui.panel.single_cell_verts = (function ui$panel$single_cell_verts(p__45541){\nvar vec__45543 = p__45541;\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45543,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45543,(1),null);\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),x,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),y,new cljs.core.Keyword(null,\"normal\",\"normal\",-1519123858),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(-1),(-1)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),(x + (1)),new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),y,new cljs.core.Keyword(null,\"normal\",\"normal\",-1519123858),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(-1)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),(x + (1)),new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),(y + (1)),new cljs.core.Keyword(null,\"normal\",\"normal\",-1519123858),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(1)], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"x\",\"x\",2099068185),x,new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),(y + (1)),new cljs.core.Keyword(null,\"normal\",\"normal\",-1519123858),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(-1),(1)], null)], null)], null);\n});\nui.panel.walk_the_line = (function ui$panel$walk_the_line(prefs,cells,acc){\nwhile(true){\nvar cells__$1 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,cells);\nvar map__45547 = acc;\nvar map__45547__$1 = (((((!((map__45547 == null))))?(((((map__45547.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45547.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45547):map__45547);\nvar cell = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45547__$1,new cljs.core.Keyword(null,\"cell\",\"cell\",764245084));\nvar to = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45547__$1,new cljs.core.Keyword(null,\"to\",\"to\",192099007));\nvar from = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45547__$1,new cljs.core.Keyword(null,\"from\",\"from\",1815293044));\nvar verts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45547__$1,new cljs.core.Keyword(null,\"verts\",\"verts\",1167738814));\nvar n = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45547__$1,new cljs.core.Keyword(null,\"n\",\"n\",562130025));\nvar done_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45547__$1,new cljs.core.Keyword(null,\"done?\",\"done?\",-1847001718));\nvar neighbours = ui.panel.cell_neighbours(prefs,cell);\nvar next_cell = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(neighbours,to);\nif(cljs.core.truth_(done_QMARK_)){\nreturn acc;\n} else {\nvar G__45702 = prefs;\nvar G__45703 = cells__$1;\nvar G__45704 = ((cljs.core.empty_QMARK_(cells__$1))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc,new cljs.core.Keyword(null,\"done?\",\"done?\",-1847001718),true):((cljs.core.every_QMARK_(((function (prefs,cells,acc,cells__$1,map__45547,map__45547__$1,cell,to,from,verts,n,done_QMARK_,neighbours,next_cell){\nreturn (function (p1__45546_SHARP_){\nreturn (((p1__45546_SHARP_ == null)) || ((!(cljs.core.contains_QMARK_(cells__$1,p1__45546_SHARP_)))));\n});})(prefs,cells,acc,cells__$1,map__45547,map__45547__$1,cell,to,from,verts,n,done_QMARK_,neighbours,next_cell))\n,neighbours))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc,new cljs.core.Keyword(null,\"verts\",\"verts\",1167738814),ui.panel.single_cell_verts(cell)),new cljs.core.Keyword(null,\"visited-cells\",\"visited-cells\",294761336),cljs.core.PersistentHashSet.createAsIfByAssoc([cell])),new cljs.core.Keyword(null,\"done?\",\"done?\",-1847001718),true):(((((cljs.core.count(verts) >= (4))) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(verts),cljs.core.last(verts))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(verts),cljs.core.first(cljs.core.take_last((2),verts))))))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(acc,new cljs.core.Keyword(null,\"verts\",\"verts\",1167738814),cljs.core.butlast),new cljs.core.Keyword(null,\"done?\",\"done?\",-1847001718),true):((cljs.core.contains_QMARK_(cells__$1,next_cell))?(function (){var new_acc = cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc,new cljs.core.Keyword(null,\"cell\",\"cell\",764245084),next_cell),new cljs.core.Keyword(null,\"visited-cells\",\"visited-cells\",294761336),cljs.core.conj,next_cell),new cljs.core.Keyword(null,\"from\",\"from\",1815293044),to),new cljs.core.Keyword(null,\"n\",\"n\",562130025),cljs.core.inc),new cljs.core.Keyword(null,\"to\",\"to\",192099007),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(ui.panel.mod4,cljs.core.dec));\nif((from == null)){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(new_acc,new cljs.core.Keyword(null,\"verts\",\"verts\",1167738814),cljs.core.identity);\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_acc,new cljs.core.Keyword(null,\"verts\",\"verts\",1167738814),ui.panel.make_verts(verts,cell,from,to));\n}\n})():cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(acc,new cljs.core.Keyword(null,\"to\",\"to\",192099007),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(ui.panel.mod4,cljs.core.inc)),new cljs.core.Keyword(null,\"n\",\"n\",562130025),cljs.core.inc)\n))));\nprefs = G__45702;\ncells = G__45703;\nacc = G__45704;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * returns a bounding box [upper-left lower-right] that encompasses all cells\n */\nui.panel.bounding_box = (function ui$panel$bounding_box(verts){\nvar xs = cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"x\",\"x\",2099068185),verts);\nvar ys = cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),verts);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),new cljs.core.Keyword(null,\"x\",\"x\",2099068185)),cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.first(ys),new cljs.core.Keyword(null,\"y\",\"y\",-1757859776))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.last(xs),new cljs.core.Keyword(null,\"x\",\"x\",2099068185)),cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.last(ys),new cljs.core.Keyword(null,\"y\",\"y\",-1757859776))], null)], null);\n});\nui.panel.cells_in_bb = (function ui$panel$cells_in_bb(p__45550){\nvar vec__45551 = p__45550;\nvar vec__45554 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45551,(0),null);\nvar x1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45554,(0),null);\nvar y1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45554,(1),null);\nvar vec__45557 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45551,(1),null);\nvar x2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45557,(0),null);\nvar y2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45557,(1),null);\nvar iter__4529__auto__ = (function ui$panel$cells_in_bb_$_iter__45563(s__45564){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__45564__$1 = s__45564;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__45564__$1);\nif(temp__5735__auto__){\nvar xs__6292__auto__ = temp__5735__auto__;\nvar x = cljs.core.first(xs__6292__auto__);\nvar iterys__4525__auto__ = ((function (s__45564__$1,x,xs__6292__auto__,temp__5735__auto__,vec__45551,vec__45554,x1,y1,vec__45557,x2,y2){\nreturn (function ui$panel$cells_in_bb_$_iter__45563_$_iter__45565(s__45566){\nreturn (new cljs.core.LazySeq(null,((function (s__45564__$1,x,xs__6292__auto__,temp__5735__auto__,vec__45551,vec__45554,x1,y1,vec__45557,x2,y2){\nreturn (function (){\nvar s__45566__$1 = s__45566;\nwhile(true){\nvar temp__5735__auto____$1 = cljs.core.seq(s__45566__$1);\nif(temp__5735__auto____$1){\nvar s__45566__$2 = temp__5735__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__45566__$2)){\nvar c__4527__auto__ = cljs.core.chunk_first(s__45566__$2);\nvar size__4528__auto__ = cljs.core.count(c__4527__auto__);\nvar b__45568 = cljs.core.chunk_buffer(size__4528__auto__);\nif((function (){var i__45567 = (0);\nwhile(true){\nif((i__45567 < size__4528__auto__)){\nvar y = cljs.core._nth(c__4527__auto__,i__45567);\ncljs.core.chunk_append(b__45568,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x,y], null));\n\nvar G__45733 = (i__45567 + (1));\ni__45567 = G__45733;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__45568),ui$panel$cells_in_bb_$_iter__45563_$_iter__45565(cljs.core.chunk_rest(s__45566__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__45568),null);\n}\n} else {\nvar y = cljs.core.first(s__45566__$2);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x,y], null),ui$panel$cells_in_bb_$_iter__45563_$_iter__45565(cljs.core.rest(s__45566__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(s__45564__$1,x,xs__6292__auto__,temp__5735__auto__,vec__45551,vec__45554,x1,y1,vec__45557,x2,y2))\n,null,null));\n});})(s__45564__$1,x,xs__6292__auto__,temp__5735__auto__,vec__45551,vec__45554,x1,y1,vec__45557,x2,y2))\n;\nvar fs__4526__auto__ = cljs.core.seq(iterys__4525__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$2(y1,y2)));\nif(fs__4526__auto__){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fs__4526__auto__,ui$panel$cells_in_bb_$_iter__45563(cljs.core.rest(s__45564__$1)));\n} else {\nvar G__45746 = cljs.core.rest(s__45564__$1);\ns__45564__$1 = G__45746;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4529__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$2(x1,x2));\n});\n/**\n * reset this panel's boundry box\n *   list of all cells in this boundry box, minus cells visited by 'walk-the-line' \n *   for each remaining cell: \n *  sum of angles between it and all the verts (aka: calculate winding-number)\n *  zero? discard. otherwise add it to visited cells.\n *   return visited cells (so the panel's cells can be updated)\n */\nui.panel.cleanup = (function ui$panel$cleanup(panel,visited_cells,verts){\nvar bb = ui.panel.bounding_box(verts);\nvar cells = ui.panel.cells_in_bb(bb);\nvar cells_to_check = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(visited_cells,cells);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(visited_cells,(function (){var iter__4529__auto__ = (function ui$panel$cleanup_$_iter__45577(s__45578){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__45578__$1 = s__45578;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__45578__$1);\nif(temp__5735__auto__){\nvar s__45578__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__45578__$2)){\nvar c__4527__auto__ = cljs.core.chunk_first(s__45578__$2);\nvar size__4528__auto__ = cljs.core.count(c__4527__auto__);\nvar b__45580 = cljs.core.chunk_buffer(size__4528__auto__);\nif((function (){var i__45579 = (0);\nwhile(true){\nif((i__45579 < size__4528__auto__)){\nvar cell = cljs.core._nth(c__4527__auto__,i__45579);\nif(ui.tools.inside_QMARK_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.first(cell) + 0.5),(cljs.core.last(cell) + 0.5)], null),verts)){\ncljs.core.chunk_append(b__45580,cell);\n\nvar G__45780 = (i__45579 + (1));\ni__45579 = G__45780;\ncontinue;\n} else {\nvar G__45781 = (i__45579 + (1));\ni__45579 = G__45781;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__45580),ui$panel$cleanup_$_iter__45577(cljs.core.chunk_rest(s__45578__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__45580),null);\n}\n} else {\nvar cell = cljs.core.first(s__45578__$2);\nif(ui.tools.inside_QMARK_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.first(cell) + 0.5),(cljs.core.last(cell) + 0.5)], null),verts)){\nreturn cljs.core.cons(cell,ui$panel$cleanup_$_iter__45577(cljs.core.rest(s__45578__$2)));\n} else {\nvar G__45786 = cljs.core.rest(s__45578__$2);\ns__45578__$1 = G__45786;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4529__auto__(cells_to_check);\n})());\n});\nui.panel.remove_disconnected = (function ui$panel$remove_disconnected(cells,panel_id){\nreturn (function (c){\nvar c1 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,c,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__45581_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(panel_id,cljs.core.second(p1__45581_SHARP_));\n}),c)));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1,cljs.core.zipmap(cells,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(panel_id))], 0));\n});\n});\nui.panel.walk_BANG_ = (function ui$panel$walk_BANG_(state,pg_id,panel_id){\nvar prefs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.Keyword(null,\"preferences\",\"preferences\",-484312211));\nvar vec__45588 = (prefs.cljs$core$IFn$_invoke$arity$1 ? prefs.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"cell-dimensions\",\"cell-dimensions\",470817121)) : prefs.call(null,new cljs.core.Keyword(null,\"cell-dimensions\",\"cell-dimensions\",470817121)));\nvar cell_width = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45588,(0),null);\nvar cell_height = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45588,(1),null);\nvar page = reagent.core.cursor(state,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"pages\",\"pages\",-285406513),pg_id], null));\nvar panel = reagent.core.cursor(page,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"panels\",\"panels\",801034044),panel_id], null));\nvar cells = (function (){var fexpr__45598 = cljs.core.deref(panel);\nreturn (fexpr__45598.cljs$core$IFn$_invoke$arity$1 ? fexpr__45598.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"cells\",\"cells\",-985166822)) : fexpr__45598.call(null,new cljs.core.Keyword(null,\"cells\",\"cells\",-985166822)));\n})();\nvar offset = ((prefs.cljs$core$IFn$_invoke$arity$1 ? prefs.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"gutter-width\",\"gutter-width\",-857489052)) : prefs.call(null,new cljs.core.Keyword(null,\"gutter-width\",\"gutter-width\",-857489052))) / (2));\nvar vec__45591 = ui.panel.upper_left_corner(cells);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45591,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45591,(1),null);\nvar cell = vec__45591;\nvar acc = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"cell\",\"cell\",764245084),cell,new cljs.core.Keyword(null,\"visited-cells\",\"visited-cells\",294761336),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"to\",\"to\",192099007),(2),new cljs.core.Keyword(null,\"from\",\"from\",1815293044),null,new cljs.core.Keyword(null,\"verts\",\"verts\",1167738814),cljs.core.PersistentVector.EMPTY], null);\nvar map__45594 = ui.panel.walk_the_line(prefs,cells,acc);\nvar map__45594__$1 = (((((!((map__45594 == null))))?(((((map__45594.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45594.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45594):map__45594);\nvar verts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45594__$1,new cljs.core.Keyword(null,\"verts\",\"verts\",1167738814));\nvar visited_cells = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45594__$1,new cljs.core.Keyword(null,\"visited-cells\",\"visited-cells\",294761336));\nvar cells__$1 = ((cljs.core.empty_QMARK_(verts))?cljs.core.PersistentVector.EMPTY:ui.panel.cleanup(panel,visited_cells,verts));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var fexpr__45600 = cljs.core.deref(panel);\nreturn (fexpr__45600.cljs$core$IFn$_invoke$arity$1 ? fexpr__45600.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"verts\",\"verts\",1167738814)) : fexpr__45600.call(null,new cljs.core.Keyword(null,\"verts\",\"verts\",1167738814)));\n})(),verts)){\nreturn null;\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(panel,cljs.core.assoc,new cljs.core.Keyword(null,\"cells\",\"cells\",-985166822),cells__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"verts\",\"verts\",1167738814),verts,new cljs.core.Keyword(null,\"bounding-box\",\"bounding-box\",201336205),ui.panel.bounding_box(verts)], 0));\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(page,cljs.core.update,new cljs.core.Keyword(null,\"cells\",\"cells\",-985166822),ui.panel.remove_disconnected(cells__$1,panel_id));\n}\n});\nui.panel.panel = (function ui$panel$panel(state,pg_id,pn_id){\nreturn (function (state__$1,pg_id__$1,pn_id__$1){\nvar appstate = reagent.core.cursor(state__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"appstate\",\"appstate\",-602713426)], null));\nvar map__45601 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state__$1),new cljs.core.Keyword(null,\"preferences\",\"preferences\",-484312211));\nvar map__45601__$1 = (((((!((map__45601 == null))))?(((((map__45601.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45601.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45601):map__45601);\nvar vec__45602 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45601__$1,new cljs.core.Keyword(null,\"cell-dimensions\",\"cell-dimensions\",470817121));\nvar cw = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45602,(0),null);\nvar ch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45602,(1),null);\nvar width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45601__$1,new cljs.core.Keyword(null,\"width\",\"width\",-384071477));\nvar height = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45601__$1,new cljs.core.Keyword(null,\"height\",\"height\",1025178622));\nvar export_path = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45601__$1,new cljs.core.Keyword(null,\"export-path\",\"export-path\",804064704));\nvar map__45605 = cljs.core.deref(appstate);\nvar map__45605__$1 = (((((!((map__45605 == null))))?(((((map__45605.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45605.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45605):map__45605);\nvar scale = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45605__$1,new cljs.core.Keyword(null,\"scale\",\"scale\",-230427353));\nvar tool = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45605__$1,new cljs.core.Keyword(null,\"tool\",\"tool\",-1298696470));\nvar panel = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state__$1),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"pages\",\"pages\",-285406513),pg_id__$1,new cljs.core.Keyword(null,\"panels\",\"panels\",801034044),pn_id__$1], null));\nvar vec__45606 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(panel,new cljs.core.Keyword(null,\"bounding-box\",\"bounding-box\",201336205));\nvar vec__45609 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45606,(0),null);\nvar bx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45609,(0),null);\nvar by = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45609,(1),null);\nvar vec__45612 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45606,(1),null);\nvar bx2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45612,(0),null);\nvar by2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45612,(1),null);\nvar strokes = clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",(function (){var iter__4529__auto__ = (function ui$panel$panel_$_iter__45617(s__45618){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__45618__$1 = s__45618;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__45618__$1);\nif(temp__5735__auto__){\nvar s__45618__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__45618__$2)){\nvar c__4527__auto__ = cljs.core.chunk_first(s__45618__$2);\nvar size__4528__auto__ = cljs.core.count(c__4527__auto__);\nvar b__45620 = cljs.core.chunk_buffer(size__4528__auto__);\nif((function (){var i__45619 = (0);\nwhile(true){\nif((i__45619 < size__4528__auto__)){\nvar map__45621 = cljs.core._nth(c__4527__auto__,i__45619);\nvar map__45621__$1 = (((((!((map__45621 == null))))?(((((map__45621.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45621.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45621):map__45621);\nvar verts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45621__$1,new cljs.core.Keyword(null,\"verts\",\"verts\",1167738814));\ncljs.core.chunk_append(b__45620,[\"M\",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"L\",(function (){var iter__4529__auto__ = ((function (i__45619,map__45621,map__45621__$1,verts,c__4527__auto__,size__4528__auto__,b__45620,s__45618__$2,temp__5735__auto__,appstate,map__45601,map__45601__$1,vec__45602,cw,ch,width,height,export_path,map__45605,map__45605__$1,scale,tool,panel,vec__45606,vec__45609,bx,by,vec__45612,bx2,by2){\nreturn (function ui$panel$panel_$_iter__45617_$_iter__45633(s__45634){\nreturn (new cljs.core.LazySeq(null,((function (i__45619,map__45621,map__45621__$1,verts,c__4527__auto__,size__4528__auto__,b__45620,s__45618__$2,temp__5735__auto__,appstate,map__45601,map__45601__$1,vec__45602,cw,ch,width,height,export_path,map__45605,map__45605__$1,scale,tool,panel,vec__45606,vec__45609,bx,by,vec__45612,bx2,by2){\nreturn (function (){\nvar s__45634__$1 = s__45634;\nwhile(true){\nvar temp__5735__auto____$1 = cljs.core.seq(s__45634__$1);\nif(temp__5735__auto____$1){\nvar s__45634__$2 = temp__5735__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__45634__$2)){\nvar c__4527__auto____$1 = cljs.core.chunk_first(s__45634__$2);\nvar size__4528__auto____$1 = cljs.core.count(c__4527__auto____$1);\nvar b__45636 = cljs.core.chunk_buffer(size__4528__auto____$1);\nif((function (){var i__45635 = (0);\nwhile(true){\nif((i__45635 < size__4528__auto____$1)){\nvar vec__45637 = cljs.core._nth(c__4527__auto____$1,i__45635);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45637,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45637,(1),null);\ncljs.core.chunk_append(b__45636,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(x),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(''));\n\nvar G__45796 = (i__45635 + (1));\ni__45635 = G__45796;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__45636),ui$panel$panel_$_iter__45617_$_iter__45633(cljs.core.chunk_rest(s__45634__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__45636),null);\n}\n} else {\nvar vec__45640 = cljs.core.first(s__45634__$2);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45640,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45640,(1),null);\nreturn cljs.core.cons([cljs.core.str.cljs$core$IFn$_invoke$arity$1(x),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(''),ui$panel$panel_$_iter__45617_$_iter__45633(cljs.core.rest(s__45634__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(i__45619,map__45621,map__45621__$1,verts,c__4527__auto__,size__4528__auto__,b__45620,s__45618__$2,temp__5735__auto__,appstate,map__45601,map__45601__$1,vec__45602,cw,ch,width,height,export_path,map__45605,map__45605__$1,scale,tool,panel,vec__45606,vec__45609,bx,by,vec__45612,bx2,by2))\n,null,null));\n});})(i__45619,map__45621,map__45621__$1,verts,c__4527__auto__,size__4528__auto__,b__45620,s__45618__$2,temp__5735__auto__,appstate,map__45601,map__45601__$1,vec__45602,cw,ch,width,height,export_path,map__45605,map__45605__$1,scale,tool,panel,vec__45606,vec__45609,bx,by,vec__45612,bx2,by2))\n;\nreturn iter__4529__auto__(verts);\n})())].join(''));\n\nvar G__45797 = (i__45619 + (1));\ni__45619 = G__45797;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__45620),ui$panel$panel_$_iter__45617(cljs.core.chunk_rest(s__45618__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__45620),null);\n}\n} else {\nvar map__45643 = cljs.core.first(s__45618__$2);\nvar map__45643__$1 = (((((!((map__45643 == null))))?(((((map__45643.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45643.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45643):map__45643);\nvar verts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45643__$1,new cljs.core.Keyword(null,\"verts\",\"verts\",1167738814));\nreturn cljs.core.cons([\"M\",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"L\",(function (){var iter__4529__auto__ = ((function (map__45643,map__45643__$1,verts,s__45618__$2,temp__5735__auto__,appstate,map__45601,map__45601__$1,vec__45602,cw,ch,width,height,export_path,map__45605,map__45605__$1,scale,tool,panel,vec__45606,vec__45609,bx,by,vec__45612,bx2,by2){\nreturn (function ui$panel$panel_$_iter__45617_$_iter__45656(s__45657){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__45657__$1 = s__45657;\nwhile(true){\nvar temp__5735__auto____$1 = cljs.core.seq(s__45657__$1);\nif(temp__5735__auto____$1){\nvar s__45657__$2 = temp__5735__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__45657__$2)){\nvar c__4527__auto__ = cljs.core.chunk_first(s__45657__$2);\nvar size__4528__auto__ = cljs.core.count(c__4527__auto__);\nvar b__45659 = cljs.core.chunk_buffer(size__4528__auto__);\nif((function (){var i__45658 = (0);\nwhile(true){\nif((i__45658 < size__4528__auto__)){\nvar vec__45660 = cljs.core._nth(c__4527__auto__,i__45658);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45660,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45660,(1),null);\ncljs.core.chunk_append(b__45659,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(x),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(''));\n\nvar G__45799 = (i__45658 + (1));\ni__45658 = G__45799;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__45659),ui$panel$panel_$_iter__45617_$_iter__45656(cljs.core.chunk_rest(s__45657__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__45659),null);\n}\n} else {\nvar vec__45663 = cljs.core.first(s__45657__$2);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45663,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__45663,(1),null);\nreturn cljs.core.cons([cljs.core.str.cljs$core$IFn$_invoke$arity$1(x),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(''),ui$panel$panel_$_iter__45617_$_iter__45656(cljs.core.rest(s__45657__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});})(map__45643,map__45643__$1,verts,s__45618__$2,temp__5735__auto__,appstate,map__45601,map__45601__$1,vec__45602,cw,ch,width,height,export_path,map__45605,map__45605__$1,scale,tool,panel,vec__45606,vec__45609,bx,by,vec__45612,bx2,by2))\n;\nreturn iter__4529__auto__(verts);\n})())].join(''),ui$panel$panel_$_iter__45617(cljs.core.rest(s__45618__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4529__auto__(cljs.core.get.cljs$core$IFn$_invoke$arity$2(panel,new cljs.core.Keyword(null,\"strokes\",\"strokes\",-1645650952)));\n})());\nvar bw = (bx2 - bx);\nvar bh = (by2 - by);\nvar p2 = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(ui.tools.lpad,\"0\",(2));\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"g\",\"g\",1738089905),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),[\"panel-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(pg_id__$1),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(pn_id__$1)].join('')], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"foreignObject\",\"foreignObject\",25502111),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"width\",\"width\",-384071477),(cw * bw),new cljs.core.Keyword(null,\"height\",\"height\",1025178622),(ch * bh),new cljs.core.Keyword(null,\"clip-path\",\"clip-path\",-439959120),[\"url(#clipimg-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2(pg_id__$1)),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2(pn_id__$1)),\")\"].join(''),new cljs.core.Keyword(null,\"x\",\"x\",2099068185),(cw * bx),new cljs.core.Keyword(null,\"y\",\"y\",-1757859776),(ch * by)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"img\",\"img\",1442687358),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"style\",\"style\",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"pointer-events\",\"pointer-events\",-1053858853),\"none\"], null),new cljs.core.Keyword(null,\"src\",\"src\",-1651076051),[\"file://\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(export_path),\"page\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2(pg_id__$1)),\"/panel00.png\"].join('')], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"path\",\"path\",-188191168),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),[\"outline\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(pn_id__$1)].join(''),new cljs.core.Keyword(null,\"d\",\"d\",1972142424),strokes,new cljs.core.Keyword(null,\"stroke\",\"stroke\",1741823555),\"#4a8ac7\",new cljs.core.Keyword(null,\"clip-path\",\"clip-path\",-439959120),[\"url(#clipsvg-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2(pg_id__$1)),\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2(pn_id__$1)),\")\"].join(''),new cljs.core.Keyword(null,\"stroke-width\",\"stroke-width\",716836435),(2),new cljs.core.Keyword(null,\"fill\",\"fill\",883462889),\"none\"], null)], null)], null);\n});\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","ui/panel.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",13],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$for-indexed","~$tools.helpers","~$oget","~$oops.core","~$oset!","^J","~$ocall","^J"],"~:excludes",["~#set",[]],"~:name","~$ui.panel","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.core","^U","~$r","^U","~$cljs.core","^V","~$goog","^W","~$rd","~$reagent.dom","~$ui.tools","^Z","^J","^J","^H","^H","~$tools.devtools","^[","~$clojure.string","^10","^Y","^Y"],"~:seen",["^N",["~:require"]],"~:uses",["^ ","~$join","^10","~$log","^[","~$lpad","^Z","~$inside?","^Z","^G","^H","^I","^J","^K","^J","^L","^J"],"~:require-macros",["^ ","^V","^V","^U","^U","~$r","^U","^J","^J","^H","^H"],"~:form",["~#list",["~$ns","^P",["^1:",["^12",["^U","~:as","~$r"],["^Y","^1<","^X"],["^10","~:refer",["^14"]],["^[","^1=",["^15"]],["^Z","^1=",["^16","^17"]],["^H","^1=",["^G"]],["^J","^1=",["^I","^K","^L"]]]]]],"~:flags",["^ ","^12",["^N",[]]],"~:js-deps",["^ "],"~:deps",["^W","^V","^U","^Y","^10","^[","^Z","^H","^J"]],"^R","^P","~:resource-id",["~:shadow.build.classpath/resource","ui/panel.cljs"],"~:compiled-at",1606876935572,"~:resource-name","ui/panel.cljs","~:warnings",[],"~:source","(ns ui.panel\n  (:require [reagent.core :as r]\n            [reagent.dom :as rd]\n            [clojure.string :refer [join]]\n            [tools.devtools :refer [log]]\n            [ui.tools :refer [lpad inside?]]\n            [tools.helpers :refer [for-indexed]]\n            [oops.core :refer [oget oset! ocall]]))\n\n(defn cell-neighbours [{:keys [grid-width grid-height]} [x y]] \n  (map (fn [[x y]] \n         (if (and (<= 0 x grid-width)\n                  (<= 0 y grid-height)) [x y] nil))\n          [[(dec x) y]\n           [x (dec y)]\n           [(inc x) y]\n           [x (inc y)]]))\n\n(defn upper-left-corner [cells]\n  (or (first (sort-by (juxt first second) cells)) []))\n\n(defn rotate [[cx cy] n] \n  (nth (map (fn [[x y]] [(+ cx x) (+ cy y)]) \n            [[0 0][1 0][1 1][0 1]]) \n       (mod n 4)))\n\n(defn mod4 \n  ([f n] (mod (f n) 4)) \n  ([n]   (mod n 4)))\n\n(defn make-verts [verts cell from to] \n  (let [angle (mod4 (- from to))\n       normals [[-1 -1] [1 -1] [1 1] [-1 1]]\n       [cx cy] (rotate cell (+ from 3))\n       [c1x c1y] (rotate cell from)\n       [c3x c3y] (rotate cell (+ from 2))]\n    (condp = angle\n      0 verts ;; from == to -> going in a straight line. No vertex added\n      1 (conj verts {:x c3x :y c3y :normal (nth normals (mod4 (+ to 3)))})\n      2 (conj verts {:x cx :y cy :normal (nth normals (mod4 inc to))} {:x c1x :y c1y :normal (nth normals (mod4 (+ to 2)))})\n      3 (conj verts {:x cx :y cy :normal (nth normals (mod4 (+ to 2)))})\n      )))\n\n(defn single-cell-verts [[x y]]\n    [{:x x :y y :normal [-1 -1]}\n     {:x (inc x) :y y :normal [1 -1]}\n     {:x (inc x) :y (inc y) :normal [1 1]}\n     {:x x :y (inc y) :normal [-1 1]}])\n\n(defn walk-the-line [prefs cells acc]\n  (let [cells (into #{} cells) ;; TODO: make sure cells is a set to begin with, then delete\n        {:keys [cell to from verts n done?]} acc\n        neighbours (cell-neighbours prefs cell)\n        next-cell (nth neighbours to)]\n    (if done? \n      acc\n      (recur prefs cells \n             (cond\n               (empty? cells) (assoc acc :done? true)\n               (every? #(or (nil? %) (not (contains? cells %))) neighbours)\n               (-> acc \n                   (assoc :verts (single-cell-verts cell))\n                   (assoc :visited-cells #{cell})\n                   (assoc :done? true))\n               (and (>= (count verts) 4) \n                    (or (= (first verts) (last verts)) (= (first verts) (first (take-last 2 verts)))))\n               (-> acc\n                   (update :verts butlast)\n                   (assoc :done? true))\n               (contains? cells next-cell)\n               (let [new-acc (-> acc \n                                 (assoc :cell next-cell) \n                                 (update :visited-cells conj next-cell)\n                                 (assoc :from to)\n                                 (update :n inc)\n                                 (update :to (comp mod4 dec)))] \n                 (if (nil? from) \n                   (update new-acc :verts identity) \n                   (assoc new-acc :verts (make-verts verts cell from to)))) ;; TODO: check equal verts right here and set done to true (if equal)\n               :else \n               (-> acc \n                   (update :to (comp mod4 inc))\n                   (update :n inc)))))))\n\n\n(defn bounding-box \n  \"returns a bounding box [upper-left lower-right] that encompasses all cells\"\n  [verts]\n  (let [xs (sort-by :x verts)\n        ys (sort-by :y verts)]\n    [[(get (first xs) :x) (get (first ys) :y)]\n     [(get (last  xs) :x) (get (last  ys) :y)]]))\n\n(defn cells-in-bb [[[x1 y1] [x2 y2]]]\n  (for [x (range x1 x2) \n        y (range y1 y2)]\n    [x y]))\n\n(defn cleanup \n  \"reset this panel's boundry box\n  list of all cells in this boundry box, minus cells visited by 'walk-the-line' \n  for each remaining cell: \n    sum of angles between it and all the verts (aka: calculate winding-number)\n    zero? discard. otherwise add it to visited cells.\n  return visited cells (so the panel's cells can be updated)\"\n  [panel visited-cells verts]\n  (let [bb             (bounding-box verts)\n        cells          (cells-in-bb bb)       \n        cells-to-check (remove visited-cells cells)]\n    (concat\n      visited-cells\n      (for [cell cells-to-check :when (inside? [(+ (first cell) 0.5) (+ (last cell) 0.5)] verts)] cell)\n      )))\n\n(defn remove-disconnected [cells panel-id]\n    (fn [c]\n      (let [c1 (apply dissoc c (->> c\n                                    (filter #(= panel-id (second %))) \n                                    (map first))) ] ; remove all cells that belong to panel 'i'\n        (merge c1 (zipmap cells (repeat panel-id))))))\n\n(defn walk! [state pg-id panel-id]\n  (let [prefs                    (get @state :preferences)\n        [cell-width cell-height] (prefs :cell-dimensions)\n        page                     (r/cursor state [:pages pg-id])\n        panel                    (r/cursor page [:panels panel-id])\n        cells                    (@panel :cells) ;; will be rebound after 'walk-the-line'\n        offset                   (/ (prefs :gutter-width) 2)\n        [x y :as cell]           (upper-left-corner cells)\n        acc                      {:cell cell \n                                  :visited-cells #{}\n                                  :to 2 \n                                  :from nil\n                                  :verts []}\n        {:keys [verts visited-cells]}   (walk-the-line prefs cells acc)\n        cells                    (if (empty? verts) []\n                                   (cleanup panel visited-cells verts))]\n\n      (when-not (= (@panel :verts) verts) ; avoid unnecessary updates\n        (swap! panel assoc :cells cells \n                           :verts verts\n                           :bounding-box (bounding-box verts))\n        (swap! page update :cells (remove-disconnected cells panel-id)))))\n\n(defn panel [state pg-id pn-id]\n  (fn [state pg-id pn-id]\n\n    (let [appstate               (r/cursor state [:appstate])\n          {:keys [width height export-path] [cw ch] :cell-dimensions} \n                                 (get @state :preferences)\n          {:keys [scale tool]}   @appstate\n          panel                  (get-in @state [:pages pg-id :panels pn-id])\n          [[bx by] [bx2 by2]]    (get panel :bounding-box)\n\n          strokes                 (join \" \" (for [{:keys [verts]} (get panel :strokes)]\n                                        (str \"M\" (join \"L\" (for [[x y] verts] (str x \" \" y))))))\n\n          bw                     (- bx2 bx)\n          bh                     (- by2 by)\n          p2                     (partial lpad \"0\" 2)\n          ]\n\n      ;(ocall ipc :invoke \"server-hello\", (str \"page-\" pg-id)) \n\n      [:g {:key (str \"panel-\" pg-id \"-\" pn-id)}\n       [:foreignObject {:width (* cw bw) \n                        :height (* ch bh) \n                        :clip-path (str \"url(#clipimg-\" (p2 pg-id) \"-\" (p2 pn-id) \")\") \n                        :x (* cw bx)  \n                        :y (* ch by)}\n\n        [:img {:style {:pointer-events \"none\"}\n               :src (str \"file://\" export-path \"page\" (p2 pg-id) \"/panel00.png\") }]]\n\n       [:path {:key (str \"outline\" pn-id)\n               :d strokes\n               :stroke \"#4a8ac7\"\n               :clip-path (str \"url(#clipsvg-\" (p2 pg-id) \"-\" (p2 pn-id) \")\") \n               :stroke-width 2\n               :fill \"none\"}]]\n\n      )))\n\n","~:reader-features",["^N",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["p__45506","p__45507","map__45508","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","vec__45509","cljs.core.nth","ui.panel/cell-neighbours","grid-width","grid-height","x","y","cljs.core.map","p__45513","vec__45514","ui.panel/upper-left-corner","cells","or__4126__auto__","cljs.core/first","cljs.core.sort_by","cljs.core.juxt","cljs.core/second","p__45519","vec__45520","ui.panel/rotate","cx","cy","n","p__45523","vec__45524","cljs.core/mod","var_args","G__45528","ui.panel/mod4","js/Error","f","ui.panel/make-verts","verts","cell","from","to","vec__45529","vec__45532","vec__45535","angle","ui.panel.mod4","normals","c1x","c1y","c3x","c3y","pred__45538","expr__45539","cljs.core/=","cljs.core.conj","cljs.core/inc","p__45541","vec__45543","ui.panel/single-cell-verts","ui.panel/walk-the-line","prefs","acc","map__45547","cljs.core.into","done?","neighbours","next-cell","cljs.core/empty?","cljs.core.assoc","p1__45546#","cljs.core/every?","cljs.core/contains?","cljs.core/count","cljs.core._EQ_","cljs.core/last","cljs.core/take-last","cljs.core.update","cljs.core/butlast","new-acc","cljs.core/conj","cljs.core.comp","cljs.core/dec","cljs.core/identity","ui.panel/bounding-box","xs","ys","p__45550","vec__45551","vec__45554","vec__45557","ui.panel/cells-in-bb","x1","y1","x2","y2","iter__4529__auto__","s__45564","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","xs__6292__auto__","iterys__4525__auto__","s__45566","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","b__45568","cljs.core/chunk-buffer","i__45567","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__45565","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","fs__4526__auto__","cljs.core.concat","iter__45563","cljs.core.range","ui.panel/cleanup","panel","visited-cells","bb","cells-to-check","cljs.core.remove","s__45578","b__45580","i__45579","iter__45577","ui.tools/inside?","ui.panel/remove-disconnected","panel-id","c","c1","cljs.core/dissoc","p1__45581#","cljs.core.filter","cljs.core.merge","cljs.core/zipmap","cljs.core.repeat","ui.panel/walk!","state","pg-id","vec__45588","vec__45591","map__45594","cljs.core/deref","cell-width","cell-height","page","reagent.core/cursor","fexpr__45598","offset","fexpr__45600","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core/update","ui.panel/panel","pn-id","map__45601","vec__45602","map__45605","vec__45606","vec__45609","vec__45612","appstate","width","height","export-path","cw","ch","scale","tool","cljs.core.get_in","bx","by","bx2","by2","strokes","clojure.string.join","s__45618","b__45620","i__45619","map__45621","iter__45617","map__45643","s__45634","b__45636","i__45635","vec__45637","iter__45633","vec__45640","s__45657","b__45659","i__45658","vec__45660","iter__45656","vec__45663","bw","bh","p2","cljs.core.partial","ui.tools/lpad","cljs.core/chunk-first"]],"~:used-vars",["^N",["~$cljs.core/comp","~$ui.panel/walk-the-line","~$ui.panel/bounding-box","~$cljs.core/=","~$ui.panel/walk!","~$cljs.core/count","~$cljs.core/identity","~$ui.panel/upper-left-corner","~$ui.panel/cleanup","~$cljs.core/last","~$cljs.core/concat","~$ui.panel/cells-in-bb","~$cljs.core/empty?","~$cljs.core/contains?","~$ui.panel/panel","~$cljs.core/conj","~$cljs.core/zipmap","~$cljs.core/update","~$cljs.core/map","~$cljs.core/swap!","~$ui.panel/mod4","~$cljs.core/get","~$ui.panel/rotate","~$cljs.core/mod","~$cljs.core/nth","~$ui.panel/single-cell-verts","~$ui.panel/cell-neighbours","~$cljs.core/not","~$ui.panel/make-verts","~$cljs.core/assoc","~$cljs.core/range","~$cljs.core/repeat","~$ui.panel/remove-disconnected","~$cljs.core/take-last","~$cljs.core/first","~$cljs.core/butlast","~$cljs.core/merge","~$cljs.core/every?","~$js/Error","~$cljs.core/inc"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^N",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1B","reagent/impl/batching.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","~$reagent.debug","~$reagent.impl.util"]]],["^1B","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","~$goog.dom.HtmlElement"]]],["^1B","ui/tools.cljs"],["cc2fecc6103c5bfb6c0ed935819902a1e82efc56","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^J","~$goog.string","~$goog.string.format","^["]]],["^1B","cljs/spec/gen/alpha.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","~$goog.Uri"]]],["^1B","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","~$goog.array","~$goog.asserts"]]],["^1B","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^1B","goog/string/stringformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2W"]]],["^1B","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2Z","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1B","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2[","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^32"]]],["^1B","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2["]]],["^2L","node_modules/prop-types/checkPropTypes.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","3180f5f58c360a2e36c5ff354213b3ff22f43d1b","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1B","reagent/impl/util.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^10","~$clojure.walk","^31","^2T"]]],["^1B","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^1B","ui/panel.cljs"],["0d90ac14ca4f73feef63dbea76ea97b1056b8a97","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^U","^Y","^10","^[","^Z","^H","^J"]]],["^1B","oops/state.cljs"],["9729401b4c6551f6becf44cf0818d04255410099","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","~$oops.helpers","~$oops.config"]]],["^1B","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^1B","tools/helpers.cljs"],["d36250311014ee156df7dd50881a4cc82b9889dd","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V"]]],["^2L","node_modules/scheduler/cjs/scheduler.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","7d8513ea2b82a7b8f00a1fd322704005205046bc","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q"]]],["^1B","reagent/ratom.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^2U","^2T","~$reagent.impl.batching","~$clojure.set","^31"]]],["^2L","node_modules/scheduler/cjs/scheduler.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","19e07f39891e78ec50904d00e33146e92404379f","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q"]]],["^1B","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^2L","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","d9f1d6c2a711a6903adf603db43d9f9e19057146","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q"]]],["^2L","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1B","shadow/js.js"],["b3abb2992c36197ba0344ec5b376a394a2d2cbc0","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^1B","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^1B","oops/sdefs.cljs"],["9729401b4c6551f6becf44cf0818d04255410099","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^E"]]],["^1B","reagent/impl/template.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^A","^10","^2U","~$reagent.impl.component","^3=","~$reagent.impl.input","~$reagent.impl.protocols","~$reagent.ratom","^2T","^31"]]],["^1B","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2["]]],["^2L","node_modules/react-dom/cjs/react-dom.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","4bace07838c7a5cc29e20b1a117224cfda13f911","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q","^A","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1606876853000,1606876853000,1601559882000],["^2L","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","d1d233cae1042d71677d46133980090e304d224b","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q","^3E","~$module$node_modules$prop_types$checkPropTypes"]]],["^1B","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2[","~$goog.reflect"]]],["^1B","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2[","~$goog.html.trustedtypes","^35","^36","^37","^38"]]],["^1B","tools/devtools.cljs"],["5adbc5cd21492c0cab26e5ab74dfbd0db6127355","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^J"]]],["^1B","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^2L","node_modules/scheduler/cjs/scheduler-tracing.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","0b00a799c88b303e4c3e8fe2628f7bde50128f0d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q"]]],["^1B","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^1B","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2Z","^2[","~$goog.html.SafeUrl","^37","^38","^32"]]],["^1B","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2[","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3K","^34","~$goog.html.uncheckedconversions","^37","^32"]]],["^1B","reagent/impl/component.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^31","^A","^2U","^3=","^3C","^3D","^2T"]]],["^1B","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V"]]],["^1B","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1B","oops/config.cljs"],["9729401b4c6551f6becf44cf0818d04255410099","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V"]]],["^1B","oops/messages.cljs"],["9729401b4c6551f6becf44cf0818d04255410099","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V"]]],["^1B","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2Z","^2[","~$goog.dom.TagName","~$goog.dom.tags","^3O","^3P","~$goog.html.SafeStyleSheet","^3K","^34","^3J","^35","^36","~$goog.labs.userAgent.browser","^31","^37","^38","^32"]]],["^1B","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^31"]]],["^1B","oops/schema.cljs"],["9729401b4c6551f6becf44cf0818d04255410099","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V"]]],["^2L","node_modules/scheduler/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","408126fc2241739168bcaf5965ae56a7df143144","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1B","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1B","reagent/impl/protocols.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V"]]],["^1B","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2Z","^2[","^2W","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1B","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^2L","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","519ffd5a4c91b67302cc9947b794966d629860cd","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q"]]],["^1B","cljs/spec/alpha.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^31","^3:","~$cljs.spec.gen.alpha","^10"]]],["^1B","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^1B","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",[]]],["^1B","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2Z","^31"]]],["^1B","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^2W","~$goog.string.StringBuffer"]]],["^2L","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","9d368af337607ffd9e708bbc85f34f14abf56368","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q","^3E"]]],["^1B","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","~$goog.dom.safe","^3Q","^37","^32"]]],["^1B","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^1B","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^32"]]],["^1B","reagent/core.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^A","~$reagent.impl.template","^3A","^2U","^3=","^3C","^3D","^2T"]]],["^1B","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^1B","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2Z","^2[","^3M","~$goog.math"]]],["^1B","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2[","^3N","^3O","^3P","^3V","^3K","^34","^37","^32"]]],["^1B","reagent/dom.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^C","^2U","^48","^3B","^3=","^3C","^3D"]]],["^2L","node_modules/prop-types/lib/ReactPropTypesSecret.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","4eec230c5b56ef580ea9c3e7ae6358ba1f8bdbec","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q"]]],["^1B","reagent/impl/input.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^3A","^3=","^3C"]]],["^1B","oops/core.cljs"],["9729401b4c6551f6becf44cf0818d04255410099","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V","^E","^31","~$oops.sdefs","~$oops.state","^3<","~$oops.messages","^3;","~$oops.schema"]]],["^1B","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W"]]],["^1B","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","~$goog.math.Long","~$goog.math.Integer","^2W","^31","^2Z","^2Y","^46"]]],["^1B","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2[","^3J","^37","^38"]]],["^1B","reagent/debug.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V"]]],["^1B","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2Z","^2[","^3P","^31","^37","^38","^32"]]],["^1B","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^3I"]]],["^1B","oops/helpers.cljs"],["9729401b4c6551f6becf44cf0818d04255410099","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V"]]],["^2L","node_modules/scheduler/tracing.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","4a7a89de5eaa5548bfc85da9e5243b3c7e444a34","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^2L","node_modules/react-dom/cjs/react-dom.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","53d4bffc04e5e55b275fb5c7f0c6918c01c78114","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^2Q","^A","^3E","^3F","^3H","~$module$node_modules$scheduler$tracing"]]],["^1B","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^V"]]],["^1B","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2Z","^2[","^2W"]]],["^1B","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^N",[]],"^2P",["^W","^2[","^38"]]]]],"~:clj-info",["^ ","jar:file:/Users/kolja/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/logging.clj",1597316544000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1601559882000,"jar:file:/Users/kolja/.m2/repository/binaryage/oops/0.7.0/oops-0.7.0.jar!/oops/spec.clj",1597316545000,"jar:file:/Users/kolja/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1601559879000,"jar:file:/Users/kolja/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coerce.cljc",1597316544000,"jar:file:/Users/kolja/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/ratom.clj",1597991487000,"jar:file:/Users/kolja/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coercers.cljc",1597316544000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1564977229000,"jar:file:/Users/kolja/.m2/repository/binaryage/oops/0.7.0/oops-0.7.0.jar!/oops/core.clj",1597316545000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/spec/gen/alpha.cljc",1601559882000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1601559882000,"jar:file:/Users/kolja/.m2/repository/binaryage/oops/0.7.0/oops-0.7.0.jar!/oops/constants.clj",1597316545000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1564977229000,"jar:file:/Users/kolja/.m2/repository/binaryage/oops/0.7.0/oops-0.7.0.jar!/oops/debug.clj",1597316545000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1564977229000,"jar:file:/Users/kolja/.m2/repository/binaryage/oops/0.7.0/oops-0.7.0.jar!/oops/config.clj",1597316545000,"jar:file:/Users/kolja/.m2/repository/binaryage/oops/0.7.0/oops-0.7.0.jar!/oops/runtime.clj",1597316545000,"file:/Users/kolja/dev/comic-ex-machina/src/tools/helpers.clj",1605344268000,"jar:file:/Users/kolja/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1601559879000,"jar:file:/Users/kolja/.m2/repository/binaryage/oops/0.7.0/oops-0.7.0.jar!/oops/messages.clj",1597316545000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1564977229000,"jar:file:/Users/kolja/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/report.cljc",1597316544000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1601559882000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1601559882000,"jar:file:/Users/kolja/.m2/repository/binaryage/oops/0.7.0/oops-0.7.0.jar!/oops/cuerdas.clj",1597316545000,"jar:file:/Users/kolja/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/debug.clj",1597991487000,"jar:file:/Users/kolja/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/interop.clj",1597991487000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1601559882000,"jar:file:/Users/kolja/.m2/repository/binaryage/oops/0.7.0/oops-0.7.0.jar!/oops/schema.clj",1597316545000,"jar:file:/Users/kolja/.m2/repository/org/clojure/spec.alpha/0.2.176/spec.alpha-0.2.176.jar!/clojure/spec/gen/alpha.clj",1564977233000,"jar:file:/Users/kolja/.m2/repository/binaryage/oops/0.7.0/oops-0.7.0.jar!/oops/sdefs.clj",1597316545000,"jar:file:/Users/kolja/.m2/repository/org/clojure/spec.alpha/0.2.176/spec.alpha-0.2.176.jar!/clojure/spec/alpha.clj",1564977233000,"jar:file:/Users/kolja/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/types.cljc",1597316544000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/spec/alpha.cljc",1601559882000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1601559882000,"jar:file:/Users/kolja/.m2/repository/binaryage/oops/0.7.0/oops-0.7.0.jar!/oops/helpers.clj",1597316545000,"jar:file:/Users/kolja/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/core.clj",1597991487000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1564977229000,"jar:file:/Users/kolja/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/core.cljc",1597316544000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1564977229000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1601559882000,"jar:file:/Users/kolja/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1601559879000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1601559882000,"jar:file:/Users/kolja/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1601559879000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1564977229000,"jar:file:/Users/kolja/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1601559879000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1601559882000,"jar:file:/Users/kolja/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/read.cljc",1597316544000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1601559882000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1601559882000,"jar:file:/Users/kolja/.m2/repository/binaryage/oops/0.7.0/oops-0.7.0.jar!/oops/defaults.clj",1597316545000,"jar:file:/Users/kolja/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1564977229000,"jar:file:/Users/kolja/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1601559879000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","ui/panel.cljs","^7",1,"^8",5,"^9",1,"^:",13],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H","^I","^J","^K","^J","^L","^J"],"^M",["^N",[]],"^O","^P","^S",null,"^T",["^ ","^U","^U","~$r","^U","^V","^V","^W","^W","^X","^Y","^Z","^Z","^J","^J","^H","^H","^[","^[","^10","^10","^Y","^Y"],"^11",["^N",["^12"]],"~:shadow/js-access-global",["^N",["Error"]],"^13",["^ ","^14","^10","^15","^[","^16","^Z","^17","^Z","^G","^H","^I","^J","^K","^J","^L","^J"],"~:defs",["^ ","~$single-cell-verts",["^ ","~:protocol-inline",null,"^5",["^ ","^6","ui/panel.cljs","^7",44,"^8",7,"^9",44,"^:",24,"~:arglists",["^1:",["~$quote",["^1:",[[["~$x","~$y"]]]]]]],"^O","^2;","^6","ui/panel.cljs","^:",24,"~:method-params",["^1:",[["~$p__45541"]]],"~:protocol-impl",null,"~:arglists-meta",["^1:",[null,null]],"^8",1,"~:variadic?",false,"^7",44,"~:ret-tag","~$cljs.core/IVector","^9",44,"~:max-fixed-arity",1,"~:fn-var",true,"^5R",["^1:",["^5S",["^1:",[[["~$x","~$y"]]]]]]],"~$cleanup",["^ ","^5Q",null,"^5",["^ ","^6","ui/panel.cljs","^7",99,"^8",7,"^9",99,"^:",14,"^5R",["^1:",["^5S",["^1:",[["~$panel","~$visited-cells","~$verts"]]]]],"~:doc","reset this panel's boundry box\n  list of all cells in this boundry box, minus cells visited by 'walk-the-line' \n  for each remaining cell: \n    sum of angles between it and all the verts (aka: calculate winding-number)\n    zero? discard. otherwise add it to visited cells.\n  return visited cells (so the panel's cells can be updated)"],"^O","^1V","^6","ui/panel.cljs","^:",14,"^5T",["^1:",[["^62","^63","^64"]]],"^5V",null,"^5W",["^1:",[null,null]],"^8",1,"^5X",false,"^7",99,"^5Y","~$cljs.core/LazySeq","^9",99,"^5[",3,"^60",true,"^5R",["^1:",["^5S",["^1:",[["^62","^63","^64"]]]]],"^65","reset this panel's boundry box\n  list of all cells in this boundry box, minus cells visited by 'walk-the-line' \n  for each remaining cell: \n    sum of angles between it and all the verts (aka: calculate winding-number)\n    zero? discard. otherwise add it to visited cells.\n  return visited cells (so the panel's cells can be updated)"],"~$upper-left-corner",["^ ","^5Q",null,"^5",["^ ","^6","ui/panel.cljs","^7",19,"^8",7,"^9",19,"^:",24,"^5R",["^1:",["^5S",["^1:",[["~$cells"]]]]]],"^O","^1U","^6","ui/panel.cljs","^:",24,"^5T",["^1:",[["^68"]]],"^5V",null,"^5W",["^1:",[null,null]],"^8",1,"^5X",false,"^7",19,"^5Y",["^N",["^5Z","~$any"]],"^9",19,"^5[",1,"^60",true,"^5R",["^1:",["^5S",["^1:",[["^68"]]]]]],"~$walk-the-line",["^ ","^5Q",null,"^5",["^ ","^6","ui/panel.cljs","^7",50,"^8",7,"^9",50,"^:",20,"^5R",["^1:",["^5S",["^1:",[["~$prefs","^68","~$acc"]]]]]],"^O","^1O","^6","ui/panel.cljs","^:",20,"^5T",["^1:",[["^6;","^68","^6<"]]],"^5V",null,"^5W",["^1:",[null,null]],"^8",1,"^5X",false,"^7",50,"^9",50,"^5[",3,"^60",true,"^5R",["^1:",["^5S",["^1:",[["^6;","^68","^6<"]]]]]],"~$mod4",["^ ","^5Q",null,"^5",["^ ","^6","ui/panel.cljs","^7",27,"^8",7,"^9",27,"^:",11,"^5R",["^1:",["^5S",["^1:",[["~$f","~$n"],["~$n"]]]]],"~:top-fn",["^ ","^5X",false,"~:fixed-arity",2,"^5[",2,"^5T",[["~$f","~$n"],["~$n"]],"^5R",["^1:",[["~$f","~$n"],["~$n"]]],"^5W",["^1:",[null,null]]]],"^O","^26","^6","ui/panel.cljs","^:",11,"^6>",["^ ","^5X",false,"^6?",2,"^5[",2,"^5T",[["~$f","~$n"],["~$n"]],"^5R",["^1:",[["~$f","~$n"],["~$n"]]],"^5W",["^1:",[null,null]]],"^5T",[["~$f","~$n"],["~$n"]],"^5V",null,"^6?",2,"^5W",["^1:",[null,null]],"^8",1,"^5X",false,"~:methods",[["^ ","^6?",2,"^5X",false,"~:tag","~$number"],["^ ","^6?",1,"^5X",false,"^6A","^6B"]],"^7",27,"^9",27,"^5[",2,"^60",true,"^5R",["^1:",[["~$f","~$n"],["~$n"]]]],"~$make-verts",["^ ","^5Q",null,"^5",["^ ","^6","ui/panel.cljs","^7",31,"^8",7,"^9",31,"^:",17,"^5R",["^1:",["^5S",["^1:",[["^64","~$cell","~$from","~$to"]]]]]],"^O","^2>","^6","ui/panel.cljs","^:",17,"^5T",["^1:",[["^64","^6D","^6E","^6F"]]],"^5V",null,"^5W",["^1:",[null,null]],"^8",1,"^5X",false,"^7",31,"^5Y",["^N",[null,"~$clj"]],"^9",31,"^5[",4,"^60",true,"^5R",["^1:",["^5S",["^1:",[["^64","^6D","^6E","^6F"]]]]]],"~$walk!",["^ ","^5Q",null,"^5",["^ ","^6","ui/panel.cljs","^7",122,"^8",7,"^9",122,"^:",12,"^5R",["^1:",["^5S",["^1:",[["~$state","~$pg-id","~$panel-id"]]]]]],"^O","^1R","^6","ui/panel.cljs","^:",12,"^5T",["^1:",[["^6I","^6J","^6K"]]],"^5V",null,"^5W",["^1:",[null,null]],"^8",1,"^5X",false,"^7",122,"^5Y",["^N",[null,"^69","~$clj-nil"]],"^9",122,"^5[",3,"^60",true,"^5R",["^1:",["^5S",["^1:",[["^6I","^6J","^6K"]]]]]],"~$remove-disconnected",["^ ","^5Q",null,"^5",["^ ","^6","ui/panel.cljs","^7",115,"^8",7,"^9",115,"^:",26,"^5R",["^1:",["^5S",["^1:",[["^68","^6K"]]]]]],"^O","^2B","^6","ui/panel.cljs","^:",26,"^5T",["^1:",[["^68","^6K"]]],"^5V",null,"^5W",["^1:",[null,null]],"^8",1,"^5X",false,"^7",115,"^5Y","~$function","^9",115,"^5[",2,"^60",true,"^5R",["^1:",["^5S",["^1:",[["^68","^6K"]]]]]],"~$bounding-box",["^ ","^5Q",null,"^5",["^ ","^6","ui/panel.cljs","^7",86,"^8",7,"^9",86,"^:",19,"^5R",["^1:",["^5S",["^1:",[["^64"]]]]],"^65","returns a bounding box [upper-left lower-right] that encompasses all cells"],"^O","^1P","^6","ui/panel.cljs","^:",19,"^5T",["^1:",[["^64"]]],"^5V",null,"^5W",["^1:",[null,null]],"^8",1,"^5X",false,"^7",86,"^5Y","^5Z","^9",86,"^5[",1,"^60",true,"^5R",["^1:",["^5S",["^1:",[["^64"]]]]],"^65","returns a bounding box [upper-left lower-right] that encompasses all cells"],"~$cells-in-bb",["^ ","^5Q",null,"^5",["^ ","^6","ui/panel.cljs","^7",94,"^8",7,"^9",94,"^:",18,"^5R",["^1:",["^5S",["^1:",[[[["~$x1","~$y1"],["~$x2","~$y2"]]]]]]]],"^O","^1Y","^6","ui/panel.cljs","^:",18,"^5T",["^1:",[["~$p__45550"]]],"^5V",null,"^5W",["^1:",[null,null]],"^8",1,"^5X",false,"^7",94,"^5Y","^66","^9",94,"^5[",1,"^60",true,"^5R",["^1:",["^5S",["^1:",[[[["^6Q","^6R"],["^6S","^6T"]]]]]]]],"~$cell-neighbours",["^ ","^5Q",null,"^5",["^ ","^6","ui/panel.cljs","^7",10,"^8",7,"^9",10,"^:",22,"^5R",["^1:",["^5S",["^1:",[[["^ ","~:keys",["~$grid-width","~$grid-height"]],["~$x","~$y"]]]]]]],"^O","^2<","^6","ui/panel.cljs","^:",22,"^5T",["^1:",[["~$p__45506","~$p__45507"]]],"^5V",null,"^5W",["^1:",[null,null]],"^8",1,"^5X",false,"^7",10,"^5Y","^66","^9",10,"^5[",2,"^60",true,"^5R",["^1:",["^5S",["^1:",[[["^ ","^6W",["^6X","^6Y"]],["~$x","~$y"]]]]]]],"^62",["^ ","^5Q",null,"^5",["^ ","^6","ui/panel.cljs","^7",145,"^8",7,"^9",145,"^:",12,"^5R",["^1:",["^5S",["^1:",[["^6I","^6J","~$pn-id"]]]]]],"^O","^20","^6","ui/panel.cljs","^:",12,"^5T",["^1:",[["^6I","^6J","^70"]]],"^5V",null,"^5W",["^1:",[null,null]],"^8",1,"^5X",false,"^7",145,"^5Y","^6N","^9",145,"^5[",3,"^60",true,"^5R",["^1:",["^5S",["^1:",[["^6I","^6J","^70"]]]]]],"~$rotate",["^ ","^5Q",null,"^5",["^ ","^6","ui/panel.cljs","^7",22,"^8",7,"^9",22,"^:",13,"^5R",["^1:",["^5S",["^1:",[[["~$cx","~$cy"],"~$n"]]]]]],"^O","^28","^6","ui/panel.cljs","^:",13,"^5T",["^1:",[["~$p__45519","~$n"]]],"^5V",null,"^5W",["^1:",[null,null]],"^8",1,"^5X",false,"^7",22,"^5Y",["^N",["^69","^6L"]],"^9",22,"^5[",2,"^60",true,"^5R",["^1:",["^5S",["^1:",[[["^72","^73"],"~$n"]]]]]]],"^18",["^ ","^V","^V","^U","^U","~$r","^U","^J","^J","^H","^H"],"~:cljs.analyzer/constants",["^ ","^11",["^N",["~:y","~:export-path","~:path","~:cell-dimensions","~:grid-width","~:stroke","~:gutter-width","~:key","~:else","~:scale","~:n","~:fill","~:done?","~:tool","~:width","~:src","~:bounding-box","~:preferences","~:normal","~:appstate","~:pages","~:style","~:clip-path","~:g","~:stroke-width","~:from","~:d","~:visited-cells","~:strokes","~:x","~:cells","~:grid-height","~:pointer-events","~:cell","~:panels","~:img","~:verts","~:height","~:foreignObject","~:to"]],"~:order",["^79","^7P","~:x","~:y","^7F","^7R","^7X","^7L","^7U","~:n","^7@","^7M","^7=","^7E","^78","^7H","^7S","^7O","^7;","^7D","^7G","^7B","^7V","^76","^7>","^7A","^7N","~:g","^7<","^7W","^7J","^7T","^7I","^7C","^7Q","^77","~:d","^7:","^7K","^7?"]],"^1>",["^ ","^12",["^N",[]]],"^1?",["^ "],"^1@",["^W","^V","^U","^Y","^10","^[","^Z","^H","^J"]],"^R","^P","~:ns-specs",["^ "],"~:ns-spec-vars",["^N",[]],"~:compiler-options",["^2K",[["^80","~:static-fns"],true,["^80","~:shadow-tweaks"],null,["^80","~:source-map-inline"],null,["^80","~:elide-asserts"],false,["^80","~:optimize-constants"],null,["^80","^1E"],null,["^80","~:external-config"],null,["^80","~:tooling-config"],null,["^80","~:emit-constants"],null,["^80","~:load-tests"],null,["^80","~:form-size-threshold"],null,["^80","~:data-readers"],null,["^80","~:infer-externs"],"~:auto",["^80","^1G"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^80","~:fn-invoke-direct"],null,["^80","~:source-map"],"/dev/null"]]]